name: Dev Release Workflow 

on:
  push:
    branches:
      - dev-aman

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Commit Message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [ -z "$COMMIT_MESSAGE" ]; then
            echo "Commit message is required."
            exit 1
          else
            echo "Commit message: $COMMIT_MESSAGE"
          fi

  generate-release-notes:
    needs: check-commit-message
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Latest Commits
        run: |
          git fetch --all --tags

      - name: Debug Git Log
        run: |
          echo "Recent Commits:"
          git log --oneline -5

      - name: Debug Commit Range
        run: |
          echo "## Debug Info" > debug_info.txt
          echo "**Commit Range:** HEAD~5..HEAD" >> debug_info.txt
          echo "**Fetched Commits:**" >> debug_info.txt
          git log --oneline HEAD~5..HEAD >> debug_info.txt

      - name: Generate Release Notes
        run: |
          echo "## Release Notes (Dev-Aman)" > release_notes.md
          echo "**Date:** $(date)" >> release_notes.md
          echo "**Commits Included:**" >> release_notes.md
          git log --pretty=format:"%s" HEAD~5..HEAD >> release_notes.md

      - name: Upload Debug Info
        uses: actions/upload-artifact@v4
        with:
          name: debug-info
          path: debug_info.txt

      - name: Upload Release Notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v0.1.0-release-dev-aman-${{ github.run_number }}"
          name: "Dev-Aman Release ${{ github.run_number }}"
          body_path: release_notes.md
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
